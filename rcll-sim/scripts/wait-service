#!/bin/bash

SCRIPT_PATH=$(dirname $(readlink -f ${BASH_SOURCE[0]}))
source $SCRIPT_PATH/setup.bash

SERVICE=$1

if [ -z "$SERVICE" ]; then
	2>&1 echo "No service given to wait for, aborting"
	exit 11
fi

MAX_TRIES=${NUM_TRIES:-12}
PERIOD=${PERIOD:-10}

echo "Checking service $SERVICE"

if [ -e /var/run/secrets/kubernetes.io/serviceaccount/token ]; then
	KUBERNETES="true"
	KUBERNETES_CACRT=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
	KUBERNETES_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
	KUBERNETES_NAMESPACE=${KUBERNETES_NAMESPACE:-$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)}
fi

if [ -z "$KUBERNETES" ]; then
	2>&1 echo "Not running in Kubernetes, aborting"
	exit 12
fi

URL="https://kubernetes.default/api/v1/namespaces/$KUBERNETES_NAMESPACE/endpoints/$SERVICE"

TRIES=0
while true; do
	echo "******** Getting endpoints *********"
	echo "URL: $URL"
	curl -s --cacert $KUBERNETES_CACRT --header "Authorization: Bearer $KUBERNETES_TOKEN" "$URL"
	echo
	echo "************************************"
	echo "*** Number of detected endpoints ***"
	curl -s --cacert $KUBERNETES_CACRT --header "Authorization: Bearer $KUBERNETES_TOKEN" "$URL" \
		| jq -r '.subsets[].addresses | length'
	echo
	echo "************************************"


	N=$(curl -s --cacert $KUBERNETES_CACRT --header "Authorization: Bearer $KUBERNETES_TOKEN" "$URL" \
				| jq -r '.subsets[].addresses | length')
	if [ -z "$N" ]; then N=0; fi

	if [ "$N" -gt "0" ]; then
		exit 0
	else
		echo "Service not reachable"
		(( TRIES=TRIES+1 ))
		if (( $TRIES >= $MAX_TRIES )); then
			2>&1 echo "Tried $MAX_TRIES times, aborting"
			exit 1
		else
			sleep $PERIOD
		fi
	fi
done
