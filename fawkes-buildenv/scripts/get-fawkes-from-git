#!/bin/bash

GIT_HOST=git@git.fawkesrobotics.org
GIT_REPO=
CHANGE_DIR=
CHECKOUT_DIR=
GET_SSH_HOSTKEY=true
RECURSIVE=true
GIT_CORE_HEAD=

OPTS=$(getopt -o "C:" -l "branch:,dir:,host:,no-ssh-hostkey-get,no-recursive,repo:,core-head:" -- "$@")
if [ $? != 0 ]
then
    echo "Failed to parse parameters"
    exit 1
fi

eval set -- "$OPTS"
while true; do
	OPTION=$1
	OPTARG=$2
	case $OPTION in
		-C)                    CHANGE_DIR=$OPTARG;;
		--repo)                GIT_REPO=$OPTARG;;
		--branch)              GIT_BRANCH=$OPTARG;;
		--host)                GIT_HOST=$OPTARG;;
    --dir)                 CHECKOUT_DIR=$OPTARG;;
		--no-ssh-hostkey-get)  GET_SSH_HOSTKEY=false;;
		--no-recursive)        RECURSIVE="";;
		--core-head)           GIT_CORE_HEAD=$OPTARG;;
		--)                    shift; break;;
  esac
	shift
done

echo Fetching $GIT_REPO

if [ -z "$GIT_REPO" ]; then
	>&2 echo No git repository given, aborting
	exit 1
fi

if [ ! -f $HOME/.ssh/known_hosts ] || ! grep -q ${GIT_HOST##*@} $HOME/.ssh/known_hosts; then
	# Need to get host key
	if [ "$GET_SSH_HOSTKEY" == "true" ]; then
		mkdir -p $HOME/.ssh
		ssh-keyscan ${GIT_HOST##*@} >> $HOME/.ssh/known_hosts
	else
		>&2 echo SSH hostkey unknown and fetching disabled
	fi
fi

GIT_WHAT=
if [[ "$GIT_HOST" = https://* ]]; then
	GIT_WHAT=$GIT_HOST/${GIT_REPO}.git
else
	GIT_WHAT=$GIT_HOST:${GIT_REPO}.git
fi

if [ -n "$CHANGE_DIR" ]; then pushd $CHANGE_DIR >/dev/null; fi

git clone ${RECURSIVE:+--recursive} ${GIT_BRANCH:+-b $GIT_BRANCH} \
  $GIT_WHAT ${CHECKOUT_DIR:-$GIT_REPO}

if [ -n "$GIT_CORE_HEAD" ]; then
	pushd ${CHECKOUT_DIR:-$GIT_REPO} >/dev/null
	if [ ! -d fawkes ]; then
		>&2 echo No fawkes sub-directory, using Fawkes core directly?
		exit 2
	fi
	cd fawkes
	echo "Checkout out Fawkes core head $GIT_CORE_HEAD"
	git checkout $GIT_CORE_HEAD
	popd >/dev/null
fi

if [ -n "$CHANGE_DIR" ]; then popd >/dev/null; fi

